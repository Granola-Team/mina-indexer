#!/bin/sh
set -ex

DOMAIN_SOCKET="$(pwd)/mina-indexer.sock"

TMPDIR=$(mktemp -d 2>/dev/null || mktemp -d -t 'mytmpdir')
BLOCKS_DIR="${TMPDIR}/blocks"
mkdir $BLOCKS_DIR

cleanup() {
    echo "Exiting with $?"
    rm -rf $TMPDIR 2>/dev/null
}

trap cleanup EXIT

idxr() {
    ./target/debug/mina-indexer "$@"
}

dl_mainnet() {
    MAX_SLOT=$1; OUT_DIR=$2
    ./download_blocks mina_network_block_data $MAX_SLOT mainnet $OUT_DIR
}

assert() {
    expected="$1"
    actual="$2"

    if [ "$expected" != "$actual" ]; then
        echo "Test Failed: Expected $expected, but got $actual"
        exit 1
    else
        echo "Test Passed!"
    fi
}

setup() {
    echo "setup"
}

teardown() {
    echo "Cleaning up and killing the background indexer with PID: $idxr_pid"
    kill $idxr_pid 2>/dev/null
    rm -rf $HOME/.mina-indexer/database || true
    rm -rf $HOME/.mina-indexer/logs || true
}


test_indexer_cli_reports() {
    # Indexer reports usage with no arguments
    idxr 2>&1 |
        grep -iq "Usage:"

    # Indexer reports usage for server subcommand
    idxr server 2>&1 |
        grep -iq "Usage: mina-indexer server"

    # Indexer reports usage for client subcommand
    idxr client 2>&1 |
        grep -iq "Usage: mina-indexer client"

    # Indexer server config subcommand exists
    idxr server config 2>&1 |
        grep -iq "Usage: mina-indexer server config"

    # Indexer server cli subcommand works
    idxr server cli --help 2>/dev/null
}

# Indexer server config passes cli with minimal args
test_indexer_basic_start() {
    setup
    idxr server cli \
         --initial-ledger tests/ledgers/mainnet-genesis.json \
         --is-genesis-ledger \
         --root-hash 3NKeMoncuHab5ScarV5ViyF16cJPT4taWNSaTLS64Dp67wuXigPZ &
    idxr_pid=$(pgrep mina-indexer)
    teardown
}

# Indexer server starts up on a minimal selection of blocks
test_best_canonical_tip() {
    setup

    dl_mainnet 15 $BLOCKS_DIR
    idxr server cli \
           --startup-dir $BLOCKS_DIR \
           --watch-dir $BLOCKS_DIR \
           --initial-ledger tests/ledgers/mainnet-genesis.json \
           --is-genesis-ledger \
           --root-hash 3NKeMoncuHab5ScarV5ViyF16cJPT4taWNSaTLS64Dp67wuXigPZ &
    idxr_pid=$(pgrep mina-indexer)
    sleep 5
    result=$(idxr client -o summary | jq -r .witness_tree.canonical_tip_hash)
    assert '3NKQUoBfi9vkbuqtDJmSEYBQrcSo4GjwG8bPCiii4yqM8AxEQvtY' $result
    teardown
}

# Indexer server ipc is available during initialization
test_ipc_is_available_immediately() {
    setup

    dl_mainnet 250 $BLOCKS_DIR
    idxr server cli \
           --startup-dir $BLOCKS_DIR \
           --watch-dir $BLOCKS_DIR \
           --initial-ledger tests/ledgers/mainnet-genesis.json \
           --is-genesis-ledger \
           --root-hash 3NKeMoncuHab5ScarV5ViyF16cJPT4taWNSaTLS64Dp67wuXigPZ &
    idxr_pid=$(pgrep mina-indexer)
    sleep 5
    idxr client -o summary | jq .
    teardown
}

# Indexer server reports correct balance for Genesis Ledger Account
test_account_balance_cli() {
    setup

    idxr server cli \
           --initial-ledger tests/ledgers/mainnet-genesis.json \
           --is-genesis-ledger \
           --root-hash 3NKeMoncuHab5ScarV5ViyF16cJPT4taWNSaTLS64Dp67wuXigPZ &
    idxr_pid=$(pgrep mina-indexer)
    sleep 5
    result=$(idxr client -o account --public-key B62qqDJCQsfDoHJvJCh1hgTpiVbmgBg8SbNKLMXsjuVsX5pxCELDyFk | jq -r .balance)
    assert '148837200000000' $result

    teardown
}

cargo build

# Check command-line arguments
if [[ "$#" -eq 0 ]]; then
    # No arguments provided, run all tests
    test_indexer_cli_reports
    test_indexer_basic_start
    test_best_canonical_tip
    test_ipc_is_available_immediately
    test_account_balance_cli
else
    # Run only specified tests
    for test_name in "$@"; do
        case $test_name in
            "test_indexer_cli_reports") test_indexer_cli_reports ;;
            "test_indexer_basic_start") test_indexer_basic_start ;;
            "test_best_canonical_tip") test_best_canonical_tip ;;
            "test_ipc_is_available_immediately") test_ipc_is_available_immediately ;;
            "test_account_balance_cli") ;;
            *) echo "Unknown test: $test_name" ;;
        esac
    done
fi
echo "Done"

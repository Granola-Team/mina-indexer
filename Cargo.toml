[package]
name = "mina-indexer"
version = "0.1.1"
edition = "2021"

[[bin]]
name = "mina-indexer"
test = true
bench = false

[features]
# required for tests - see https://github.com/rust-lang/cargo/issues/2911
default = ["loose_deserialization"]
loose_deserialization = []

[[bin]]
name = "mainnet-test"
test = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = { version = "1.0.69" }
async-trait = "0.1.64"
derive_more = "0.99"
futures = "0.3.26"
futures-util = "0.3.26"
serde = { version = "1.0.152", features = ["derive"] }
serde_json = { version = "1.0.92", features = ["raw_value", "unbounded_depth"] }
smart-default = "0.7.1"
clap = { version = "4.1.4", features = ["derive"] }
thiserror = "1.0.38"
glob = "0.3.1"
mina_serialization_proc_macros = { path = "mina_serialization_macros/proc_macros" }
mina_serialization_versioned = { path = "mina_serialization_macros/versioned" }
ark-ec = "0.3.0"
ark-ff = "0.3.0"
sha2 = "0.10.8"
hex = "0.4.3"
rand = "0.8.5"
byteorder = "1.5.0"
num = "0.4.1"
speedb = "0.0.4"
id_tree = { version = "1.8.0", features = ["serde_support"] }
watchexec = "2.3.0"
async-priority-channel = "0.1.0"
interprocess = { version = "1.2.1", features = ["tokio", "tokio_support"] }
uuid = { version = "1.3.1", features = ["v4"] }
time = { version = "0.3.20", features = ["serde", "serde-human-readable"] }
tracing = "0.1.37"
tracing-subscriber = "0.3.17"
bytesize = "1.2.0"
rust_decimal = { version = "1.34.3", features = ["serde"] }
rust_decimal_macros = "1.33.1"
bs58 = { version = "0.5.0", features = ["check"] }
blake2 = "0.10.6"
tempfile = "3.9.0"
actix-web = "4.5.1"
actix-cors = "0.7.0"
base64 = "0.22.0"
hex-literal = "0.4.1"
chrono = "0.4.34"
csv = "1.3.0"

[dev-dependencies]
quickcheck = "1.0.3"
quickcheck_macros = "1.0.0"
pretty_assertions = "1.4.0"
wasm-bindgen-test = "0.3.41"
lazy_static = "1.4.0"
serde_stacker = "0.1.11"

[dependencies.tokio]
version = "1.25.0"
features = ["full"]

[profile.release]
lto = "fat"
incremental = true

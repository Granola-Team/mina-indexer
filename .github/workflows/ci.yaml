name: CI
on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: read # to fetch code (actions/checkout)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# runs-on: ${{ matrix.os }}
#   strategy:
#     matrix:
#       os:
#         - ubuntu-latest
#       rust:
#         - stable

jobs:
  nextest:
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - name: Run cargo-nextest
        uses: taiki-e/install-action@nextest
        with:
          command: nextest
          args: run --all-features --profile ci

      - name: Release build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features

  rustfmt:
    steps:
      - name: Setup Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt

      - name: Setup Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run Rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --package mina-indexer -- --check

  clippy:
    steps:
      - name: Setup Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: clippy

      - name: Setup Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run Clippy
        if: github.event_name == 'pull_request'
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  build:
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Release Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features
